version: '3.9'

services:
  buyer-db:
    image: postgres:14
    container_name: buyer-db
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456789
      POSTGRES_DB: buyer_db
    volumes:
      - buyer_data:/var/lib/postgresql/data
      - ./sql/buyer_init.sql:/docker-entrypoint-initdb.d/buyer_init.sql
    networks:
      - shopping-net

  seller-db:
    image: postgres:14
    container_name: seller-db
    ports:
      - 5436:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456789
      POSTGRES_DB: seller_db
    volumes:
      - seller_data:/var/lib/postgresql/data
      - ./sql/seller_init.sql:/docker-entrypoint-initdb.d/seller_init.sql
    networks:
      - shopping-net
  
  product-db:
    image: postgres:14
    container_name: product-db
    ports:
      - 5438:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456789
      POSTGRES_DB: product_db
    volumes:
      - product_data:/var/lib/postgresql/data
      - ./sql/product_init.sql:/docker-entrypoint-initdb.d/product_init.sql
    networks:
      - shopping-net

  order-db:
    image: postgres:14
    container_name: order-db
    ports:
      - 5440:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456789
      POSTGRES_DB: order_db
    volumes:
      - order_data:/var/lib/postgresql/data
      - ./sql/order_init.sql:/docker-entrypoint-initdb.d/order_init.sql
    networks:
      - shopping-net

  deliveryman-db:
    image: postgres:14
    container_name: deliveryman-db
    ports:
      - 5442:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456789
      POSTGRES_DB: deliveryman_db
    volumes:
      - deliveryman_data:/var/lib/postgresql/data
      - ./sql/deliveryman_init.sql:/docker-entrypoint-initdb.d/deliveryman_init.sql
    networks:
      - shopping-net

  delivery-db:
    image: postgres:14
    container_name: delivery-db
    ports:
      - 5444:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456789
      POSTGRES_DB: delivery_db
    volumes:
      - delivery_data:/var/lib/postgresql/data
      - ./sql/delivery_init.sql:/docker-entrypoint-initdb.d/delivery_init.sql
    networks:
      - shopping-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - shopping-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - shopping-net

  auth-service:
    build:
      context: ./auth-service
    ports:
      - "8000:8000"
    env_file:
      - ./auth-service/.env
    networks:
      - shopping-net
    depends_on:
      - buyer-db
      - seller-db
      - deliveryman-db

  product-service:
    build:
      context: ./product-service
    ports:
      - "7000:7000"
    env_file:
      - ./product-service/.env
    networks:
      - shopping-net
    depends_on:
      - kafka
      - seller-db

  order-service:
    build:
      context: ./order-service
    ports:
      - "9000:9000"
    env_file:
      - ./order-service/.env
    networks:
      - shopping-net
    depends_on:
      - kafka
      - buyer-db

  delivery-service:
    build:
      context: ./delivery-service
    ports:
      - "8080:8080"
    env_file:
      - ./delivery-service/.env
    networks:
      - shopping-net
    depends_on:
      - delivery-db

volumes:
  buyer_data:
  seller_data:
  product_data:
  order_data:
  deliveryman_data:
  delivery_data:

networks:
  shopping-net:
    driver: bridge
